# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TopLargeStack(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, dependencies_count: int=None, dependencies_list: List[str]=None, processing_time: str=None):  # noqa: E501
        """TopLargeStack - a model defined in Swagger

        :param dependencies_count: The dependencies_count of this TopLargeStack.  # noqa: E501
        :type dependencies_count: int
        :param dependencies_list: The dependencies_list of this TopLargeStack.  # noqa: E501
        :type dependencies_list: List[str]
        :param processing_time: The processing_time of this TopLargeStack.  # noqa: E501
        :type processing_time: str
        """
        self.swagger_types = {
            'dependencies_count': int,
            'dependencies_list': List[str],
            'processing_time': str
        }

        self.attribute_map = {
            'dependencies_count': 'dependencies_count',
            'dependencies_list': 'dependencies_list',
            'processing_time': 'processing_time'
        }

        self._dependencies_count = dependencies_count
        self._dependencies_list = dependencies_list
        self._processing_time = processing_time

    @classmethod
    def from_dict(cls, dikt) -> 'TopLargeStack':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TopLargeStack of this TopLargeStack.  # noqa: E501
        :rtype: TopLargeStack
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dependencies_count(self) -> int:
        """Gets the dependencies_count of this TopLargeStack.


        :return: The dependencies_count of this TopLargeStack.
        :rtype: int
        """
        return self._dependencies_count

    @dependencies_count.setter
    def dependencies_count(self, dependencies_count: int):
        """Sets the dependencies_count of this TopLargeStack.


        :param dependencies_count: The dependencies_count of this TopLargeStack.
        :type dependencies_count: int
        """

        self._dependencies_count = dependencies_count

    @property
    def dependencies_list(self) -> List[str]:
        """Gets the dependencies_list of this TopLargeStack.


        :return: The dependencies_list of this TopLargeStack.
        :rtype: List[str]
        """
        return self._dependencies_list

    @dependencies_list.setter
    def dependencies_list(self, dependencies_list: List[str]):
        """Sets the dependencies_list of this TopLargeStack.


        :param dependencies_list: The dependencies_list of this TopLargeStack.
        :type dependencies_list: List[str]
        """

        self._dependencies_list = dependencies_list

    @property
    def processing_time(self) -> str:
        """Gets the processing_time of this TopLargeStack.


        :return: The processing_time of this TopLargeStack.
        :rtype: str
        """
        return self._processing_time

    @processing_time.setter
    def processing_time(self, processing_time: str):
        """Sets the processing_time of this TopLargeStack.


        :param processing_time: The processing_time of this TopLargeStack.
        :type processing_time: str
        """

        self._processing_time = processing_time
